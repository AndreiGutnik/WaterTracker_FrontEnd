{"version":3,"file":"static/js/678.bffd374b.chunk.js","mappings":"sSAmBMA,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAAmBC,EAAAA,GAAW,CAClCH,MAAOG,EAAAA,KAAaH,MAAM,yBAAyBI,SAAS,YAC5DH,SAAUE,EAAAA,KAAaC,SAAS,cAoElC,EAjEmB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAAC,EAAAC,GAAA,IAAArB,EAAAC,EAAAqB,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAASzB,EAAKoB,EAALpB,MAAOC,EAAQmB,EAARnB,SAAcqB,EAASD,EAATC,UACjDjB,GACEqB,EAAAA,EAAAA,IAAM,CACJ1B,MAAAA,EACAC,SAAAA,KAGJqB,IAAY,wBAAAC,EAAAI,OAAA,GAAAR,EAAA,KACb,gBARiBS,EAAAC,GAAA,OAAAb,EAAAc,MAAA,KAAAC,UAAA,KAUlB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAe,CAAAC,SAAA,EACdC,EAAAA,EAAAA,KAACC,EAAAA,GAAS,KACVD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLtC,cAAeA,EACfG,iBAAkBA,EAClBoC,SAAUvB,EAAamB,SAEtB,SAAAK,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAOF,EAAPE,QAASC,EAAMH,EAANG,OAAM,OAC/BV,EAAAA,EAAAA,MAACW,EAAAA,GAAU,CAAAT,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aAEJC,EAAAA,EAAAA,KAACS,EAAAA,GAAW,CAAAV,SAAC,sBACbC,EAAAA,EAAAA,KAACU,EAAAA,GAAW,CACVC,KAAK,QACLC,KAAK,QACLC,YAAY,SACZC,SAAUR,EAAQzC,QAAS0C,EAAO1C,UAEpCmC,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CAACH,KAAK,QAAQI,UAAU,SAE9BnB,EAAAA,EAAAA,MAACY,EAAAA,GAAW,CAAAV,SAAA,CAAC,uBAEXC,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAACC,QAAS,kBAAMvC,GAAiBD,EAAa,EAACqB,UACvDC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEmB,KAAMC,EAAAA,GAAU1C,EAAe,YAAc,uBAKrDsB,EAAAA,EAAAA,KAACU,EAAAA,GAAW,CACVC,KAAMjC,EAAe,OAAS,WAC9BkC,KAAK,WACLC,YAAY,WACZC,SAAUR,EAAQxC,WAAYyC,EAAOzC,aAEvCkC,EAAAA,EAAAA,KAACqB,EAAAA,GAAY,CAACT,KAAK,WAAWI,UAAU,SAExChB,EAAAA,EAAAA,KAACsB,EAAAA,GAAa,CAACX,KAAK,SAASY,SAAUlB,EAAaN,SAAC,aAGrDC,EAAAA,EAAAA,KAACwB,EAAAA,GAAO,CAACN,QAAS,kBAAM9C,EAAS,UAAU,EAAC2B,SAAC,cAClC,MAKvB,E,6BCxFa0B,EAAgBC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qLAGjBC,EAAAA,GCK1B,EARmB,WACjB,OACE7B,EAAAA,EAAAA,KAACyB,EAAa,CAAA1B,UACZC,EAAAA,EAAAA,KAAC8B,EAAU,KAGjB,C","sources":["components/SignInForm/SignIForm.js","pages/SignInPage/SignInPage.styled.jsx","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  BottleImg,\n  SignUpContainer,\n  SightUp,\n  ErMsg,\n  FormBtnStyled,\n  StyledBtn,\n  StyledField,\n  StyledForm,\n  Styledlabel,\n} from '../RegistrationForm/RegistrationForm.styled.js';\nimport sprite from '../../images/sprite.svg';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = async ({ email, password }, { resetForm }) => {\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <SignUpContainer>\n      <BottleImg />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, touched, errors }) => (\n          <StyledForm>\n            <h2>Sign in</h2>\n\n            <Styledlabel>Enter your email</Styledlabel>\n            <StyledField\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              error={!!(touched.email && errors.email)}\n            />\n            <ErMsg name=\"email\" component=\"div\" />\n\n            <Styledlabel>\n              Enter your password\n              <StyledBtn onClick={() => setShowPassword(!showPassword)}>\n                <svg>\n                  <use\n                    href={sprite + (showPassword ? '#eye-show' : '#eye-hide')}\n                  ></use>\n                </svg>\n              </StyledBtn>\n            </Styledlabel>\n            <StyledField\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              placeholder=\"Password\"\n              error={!!(touched.password && errors.password)}\n            />\n            <ErrorMessage name=\"password\" component=\"div\" />\n\n            <FormBtnStyled type=\"submit\" disabled={isSubmitting}>\n              Sign in\n            </FormBtnStyled>\n            <SightUp onClick={() => navigate('/signup')}>Sign up</SightUp>\n          </StyledForm>\n        )}\n      </Formik>\n    </SignUpContainer>\n  );\n};\n\nexport default SignInForm;\n","import styled from 'styled-components';\n\nimport background from '../../images/welcome/background.svg';\n\nexport const SignInSection = styled.section`\n  padding-top: 40px;\n  background-position: center center;\n  background-image: url(${background});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 100%; ;\n`;\n","import React from 'react';\nimport SignInForm from 'components/SignInForm/SignIForm';\nimport { SignInSection } from './SignInPage.styled';\n\nconst SignInPage = () => {\n  return (\n    <SignInSection>\n      <SignInForm />\n    </SignInSection>\n  );\n};\n\nexport default SignInPage;\n"],"names":["initialValues","email","password","validationSchema","Yup","required","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref","_ref2","resetForm","_context","prev","next","logIn","stop","_x","_x2","apply","arguments","_jsxs","SignUpContainer","children","_jsx","BottleImg","Formik","onSubmit","_ref4","isSubmitting","touched","errors","StyledForm","Styledlabel","StyledField","type","name","placeholder","error","ErMsg","component","StyledBtn","onClick","href","sprite","ErrorMessage","FormBtnStyled","disabled","SightUp","SignInSection","styled","_templateObject","_taggedTemplateLiteral","background","SignInForm"],"sourceRoot":""}