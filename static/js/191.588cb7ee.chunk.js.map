{"version":3,"file":"static/js/191.588cb7ee.chunk.js","mappings":"iTAAaA,GAAqB,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,IAAK,E,2CCGnDC,GAAoBC,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,oOAa9BC,GAAWH,GAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,+GAOrBG,GAAaL,GAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,wMACxBK,GAAAA,EAAAA,OAAAA,OAWEC,GAAcR,GAAAA,GAAAA,OAAaS,IAAAA,GAAAP,EAAAA,GAAAA,GAAA,kOAQ9BK,GAAAA,EAAAA,OAAAA,KAGEA,GAAAA,EAAAA,OAAAA,QAKCG,GAAMV,GAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,GAAAA,GAAA,4WAQhB,SAAAU,GAAK,OACdA,EAAMC,kBAAiB,aAAAC,OAAgBP,GAAAA,EAAAA,OAAAA,QAA4B,MAAM,IAahEQ,GAAef,GAAAA,GAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,GAAAA,GAAA,8FAC3BK,GAAAA,EAAAA,OAAAA,MAMEU,GAAQjB,GAAAA,GAAAA,KAAWkB,IAAAA,GAAAhB,EAAAA,GAAAA,GAAA,oDAKnBiB,GAAanB,GAAAA,GAAAA,KAAWoB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,kXAC1BK,GAAAA,EAAAA,OAAAA,QAkBEc,GAAgBrB,GAAAA,GAAAA,IAAUsB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,mSAkB1BqB,GAAUvB,GAAAA,GAAAA,IAAUwB,IAAAA,GAAAtB,EAAAA,GAAAA,GAAA,sGCvHpBuB,GAAsBzB,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,k3BAgBjC,SAAAU,GAAK,OAAK,EAAIA,EAAMc,SAAS,IAI5B,SAAAd,GAAK,OAAKA,EAAMe,OAAS,OAAS,EAAE,IACrC,SAAAf,GAAK,OAAKA,EAAMe,OAAS,GAAK,MAAM,GAWnCpB,GAAAA,EAAAA,OAAAA,KAKAA,GAAAA,EAAAA,OAAAA,MAIEA,GAAAA,EAAAA,OAAAA,M,UCNf,GApCsB,SAAHqB,GAAkD,IAA5CC,EAAWD,EAAXC,YAAaC,EAAOF,EAAPE,QAAOC,EAAAH,EAAEI,UAAAA,OAAS,IAAAD,EAAG,CAAC,EAACA,EACnDE,EAAkDD,EAAlDC,WAAYC,EAAsCF,EAAtCE,UAAWC,EAA2BH,EAA3BG,QAASC,EAAkBJ,EAAlBI,cAKpCC,GAAW,EAETC,GALoB,OAAPR,QAAO,IAAPA,OAAO,EAAPA,EAASS,QAAQC,wBAAwBC,OAC5B,OAAXZ,QAAW,IAAXA,OAAW,EAAXA,EAAaU,QAAQC,wBAAwBC,MASlE,OAJIH,EAAQ,MACVD,GAAW,IAIXK,EAAAA,GAAAA,KAACjB,GAAmB,CAACE,OAAQU,EAAUX,UAAWY,EAAMK,SACrDC,OAAOC,OAAOb,GAAWc,QACxBC,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAAL,SAAA,EACED,EAAAA,GAAAA,KAAA,MAAAC,SAAKV,KACLc,EAAAA,GAAAA,MAAA,KAAAJ,SAAA,CAAG,iBACYI,EAAAA,GAAAA,MAAA,QAAAJ,SAAA,CAAOT,EAAY,IAAK,YAEvCa,EAAAA,GAAAA,MAAA,KAAAJ,SAAA,CAAG,iCAC8B,KAC/BI,EAAAA,GAAAA,MAAA,QAAAJ,SAAA,CAAOR,EAAU,IAAM,IAAMA,EAAQ,WAEvCY,EAAAA,GAAAA,MAAA,KAAAJ,SAAA,CAAG,gCAC2BD,EAAAA,GAAAA,KAAA,QAAAC,SAAOP,WAIvCM,EAAAA,GAAAA,KAAA,MAAAC,SAAI,yCAIZ,ECeA,GA/CqB,SAAHf,GAA+C,IAAzCC,EAAWD,EAAXC,YAAaoB,EAAGrB,EAAHqB,IAAKC,EAAetB,EAAfsB,gBACxCC,GAAsCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,GAAMC,EAAAA,EAAAA,QAAO,MAEbC,EAAc,SAAAC,GACdH,EAAIlB,UAAYkB,EAAIlB,QAAQsB,SAASD,EAAEE,SACzCN,EAAe,KAEnB,GAEAO,EAAAA,EAAAA,YAAU,WAER,OADAC,SAASC,iBAAiB,QAASN,GAC5B,WACLK,SAASE,oBAAoB,QAASP,EACxC,CACF,GAAG,IAMH,OACEZ,EAAAA,GAAAA,MAACxB,GAAO,CAAAoB,SAAA,EACND,EAAAA,GAAAA,KAAA,OAAAC,SACGY,IAAgBN,IACfP,EAAAA,GAAAA,KAACyB,GAAa,CAEZtC,YAAaA,EACbC,QAAS2B,EACTzB,UAAWkB,GAHND,MAOXP,EAAAA,GAAAA,KAAChC,GAAG,CACF+C,IAAKA,EACLW,QAAS,WAjBbZ,GAAe,SAAAa,GAAS,OAAKA,IAAcpB,EAAM,KAAOA,CAAG,GAiBxB,EAC/BpC,mBAAoBqC,GAAmBA,EAAgBf,QAAU,IAAIQ,SAEpEM,KAEHP,EAAAA,GAAAA,KAACvB,GAAU,CAAAwB,SACRO,EAAe,GAAApC,OAAMwD,KAAKC,IAAIrB,EAAgBf,QAAS,KAAI,KAAM,SAnBxDc,EAuBlB,EC/BauB,GAAW,WACtB,IAAArB,GAAsCC,EAAAA,EAAAA,UAAS,IAAIqB,MAAOpB,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDuB,EAAWrB,EAAA,GAAEsB,EAActB,EAAA,GAC5BuB,GAAWC,EAAAA,GAAAA,MACXC,GAAgBC,EAAAA,GAAAA,IAAYpF,IAC5B8D,GAAMC,EAAAA,EAAAA,QAAO,OAEnBK,EAAAA,EAAAA,YAAU,WACR,IAAMiB,EAAK,GAAAlE,OACT4D,EAAYO,WAAa,EAAC,OAAAnE,OACtB4D,EAAYQ,eAElBN,GAASO,EAAAA,GAAAA,GAAgBH,GAC3B,GAAG,CAACJ,EAAUF,IAuDd,OACE3B,EAAAA,GAAAA,MAAChD,GAAiB,CAACqF,UAAU,WAAW3B,IAAKA,EAAId,SAAA,EAC/CI,EAAAA,GAAAA,MAAC5C,GAAQ,CAAAwC,SAAA,EACPD,EAAAA,GAAAA,KAACrC,GAAU,CAAAsC,SAAC,WACZI,EAAAA,GAAAA,MAAChC,GAAY,CAAA4B,SAAA,EACXD,EAAAA,GAAAA,KAAClC,GAAW,CAAC,aAAW,iBAAiB4D,QAjDzB,WACtB,IAAMiB,EAAgB,IAAIZ,KACxBC,EAAYQ,cACZR,EAAYO,WAAa,EACzB,GAEFN,EAAeU,EACjB,EA0C0E1C,UAChED,EAAAA,GAAAA,KAAA,OAAK4C,MAAM,KAAKC,OAAO,KAAI5C,UACzBD,EAAAA,GAAAA,KAAA,OAAK8C,KAAMC,GAAAA,EAAQ,qBAGvB/C,EAAAA,GAAAA,KAACzB,GAAK,CAAA0B,SACH,IAAI+C,KAAKC,eAAe,QAAS,CAAEX,MAAO,SAAUY,OACnDlB,MAGJhC,EAAAA,GAAAA,KAAClC,GAAW,CACV,aAAW,aACX4D,QAtEc,WACtB,IAAMyB,EAAgB,IAAIpB,KACxBC,EAAYQ,cACZR,EAAYO,WAAa,EACzB,GAEFN,EAAekB,EACjB,EAgEUC,SArDa,WACrB,IAAMC,EAAQ,IAAItB,KAClB,OACEC,EAAYO,aAAec,EAAMd,YACjCP,EAAYQ,gBAAkBa,EAAMb,aAExC,CA+CoBc,GAAiBrD,UAE3BD,EAAAA,GAAAA,KAAA,OAAK4C,MAAM,KAAKC,OAAO,KAAI5C,UACzBD,EAAAA,GAAAA,KAAA,OAAK8C,KAAMC,GAAAA,EAAQ,4BAK3B/C,EAAAA,GAAAA,KAACrB,GAAa,CAAAsB,SA7CC,WACjB,IAAMsD,EARC,IAAIxB,KACTC,EAAYQ,cACZR,EAAYO,WAAa,EACzB,GACAiB,UAKF,OAAOC,MAAMC,KAAK,CAAEtD,OAAQmD,IAAe,SAACI,EAAGC,GAC7C,IAAMrD,EAAMqD,EAAQ,EACdpD,EAA+B,OAAb4B,QAAa,IAAbA,OAAa,EAAbA,EAAeyB,MACrC,SAAAC,GAAI,OAAIA,EAAKvE,YAAcwE,OAAOD,EAAKvE,WAAWyE,MAAM,KAAK,MAAQzD,CAAG,IAG1E,OACEP,EAAAA,GAAAA,KAACiE,GAAY,CAEX9E,YAAa4B,EACbR,IAAKA,EACLC,gBAAiBA,GAHZD,EAMX,GACF,CA4BoB2D,OAGtB,EC/GaC,GAAiB7G,GAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,+MAa7B4G,GAAQ9G,GAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,4YAUfK,GAAAA,EAAAA,OAAAA,OAaHwG,GAAY/G,GAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,uGAOtB8G,GAAWhH,GAAAA,GAAAA,OAAaS,IAAAA,GAAAP,EAAAA,GAAAA,GAAA,6LAUzBK,GAAAA,EAAAA,OAAAA,KAIAA,GAAAA,EAAAA,OAAAA,QAIC0G,GAAcjH,GAAAA,GAAAA,GAASW,IAAAA,GAAAT,EAAAA,GAAAA,GAAA,yEAMvBgH,GAAclH,GAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,GAAAA,GAAA,iGAOvBiH,GAAYnH,GAAAA,GAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,GAAAA,GAAA,4YAUnBK,GAAAA,EAAAA,OAAAA,OAaH6G,GAAepH,GAAAA,GAAAA,IAAUoB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,4fAUtBK,GAAAA,EAAAA,OAAAA,KAeFA,GAAAA,EAAAA,OAAAA,MAKD8G,GAAiBrH,GAAAA,GAAAA,EAAQsB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,kFAC3BK,GAAAA,EAAAA,OAAAA,MAME+G,GAAetH,GAAAA,GAAAA,EAAQwB,IAAAA,GAAAtB,EAAAA,GAAAA,GAAA,+DACzBK,GAAAA,EAAAA,OAAAA,OAKEgH,GAAcvH,GAAAA,GAAAA,IAAUwH,IAAAA,GAAAtH,EAAAA,GAAAA,GAAA,mXAUrBK,GAAAA,EAAAA,OAAAA,OAYHkH,GAAoBzH,GAAAA,GAAAA,GAAS0H,IAAAA,GAAAxH,EAAAA,GAAAA,GAAA,sHAQ7ByH,GAAe3H,GAAAA,GAAAA,IAAU4H,IAAAA,GAAA1H,EAAAA,GAAAA,GAAA,ynBAazBK,GAAAA,EAAAA,OAAAA,KAMKA,GAAAA,EAAAA,OAAAA,aAGHA,GAAAA,EAAAA,OAAAA,MACKA,GAAAA,EAAAA,OAAAA,K,WChMPsH,GAAY7H,GAAAA,GAAAA,EAAQC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,wDAKpB4H,GAAkB9H,GAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,iJAS5B6H,GAAe/H,GAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,8YA2B5B8H,GAAahI,GAAAA,GAAAA,KAAWS,IAAAA,GAAAP,EAAAA,GAAAA,GAAA,8GAC1BK,GAAAA,EAAAA,OAAAA,MAOE0H,GAAYjI,GAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,GAAAA,GAAA,8JAQnBK,GAAAA,EAAAA,OAAAA,cAGH2H,IAAgBlI,EAAAA,GAAAA,IAAOmI,GAAAA,GAAPnI,CAAYgB,IAAAA,GAAAd,EAAAA,GAAAA,GAAA,0BAI5BkI,GAAiBpI,GAAAA,GAAAA,MAAYkB,IAAAA,GAAAhB,EAAAA,GAAAA,GAAA,wIAS7BmI,GAAmBrI,GAAAA,GAAAA,MAAYoB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,2MAa/BoI,IAAkBtI,EAAAA,GAAAA,IAAOuI,GAAAA,GAAPvI,CAAasB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,kpBAItBK,GAAAA,EAAAA,OAAAA,aAKXA,GAAAA,EAAAA,OAAAA,MA8BEiI,GAAcxI,GAAAA,GAAAA,MAAYwB,IAAAA,GAAAtB,EAAAA,GAAAA,GAAA,iSAE5BK,GAAAA,EAAAA,OAAAA,MAeEkI,GAAUzI,GAAAA,GAAAA,OAAawH,IAAAA,GAAAtH,EAAAA,GAAAA,GAAA,mbAQpBK,GAAAA,EAAAA,OAAAA,KAIHA,GAAAA,EAAAA,OAAAA,OAYAmI,GAAgB1I,GAAAA,GAAAA,IAAU0H,IAAAA,GAAAxH,EAAAA,GAAAA,GAAA,iP,gCC1K1ByI,GAAkB,SAAA/I,GAAK,OAAIA,EAAMgJ,OAAOC,KAAM,EAE9CC,GAAmB,SAAAlJ,GAAK,OAAIA,EAAMgJ,OAAOG,YAAa,EAEtDC,GAAqB,SAAApJ,GAAK,OAAIA,EAAMgJ,OAAOG,aAAaE,GAAI,ECJ5DC,GAAmB,SAAAtJ,GAAK,OAAIA,EAAMuJ,MAAMC,KAAM,ECwB9CC,GAAkB,WAC7B,IAAMzE,GAAWC,EAAAA,GAAAA,MAEjByE,GAAmCvE,EAAAA,GAAAA,IAAY+D,IAAvCG,EAAGK,EAAHL,IAAKM,EAAID,EAAJC,KACTC,EAD0BF,EAAXG,YAGbC,GAAQ3E,EAAAA,GAAAA,IAAY4D,IAClBgB,GAAe5E,EAAAA,GAAAA,IAAYmE,IAA3BS,WACR,GAAID,IAAUE,GAAAA,EAAAA,UAA0B,CACtC,IAAMC,EAAWF,EAAW7G,OACxB+G,EAAW,IACbL,EAAcG,EAAWE,EAAW,GAAGJ,YAE3C,CAEA,IAAMZ,GAAQ9D,EAAAA,GAAAA,IAAY4D,IAE1BxF,GAA4BC,EAAAA,EAAAA,UAASoG,GAAYnG,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1C2G,EAAMzG,EAAA,GAAE0G,EAAS1G,EAAA,GAExB2G,GAAoC5G,EAAAA,EAAAA,UAAS0G,GAAOG,GAAA3G,EAAAA,EAAAA,GAAA0G,EAAA,GAA7CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAkEhC,OACElH,EAAAA,GAAAA,MAAAC,GAAAA,SAAA,CAAAL,SAAA,EACED,EAAAA,GAAAA,KAACmF,GAAS,CAAAlF,SAAC,sBACXI,EAAAA,GAAAA,MAAC+E,GAAe,CAAAnF,SAAA,EACdD,EAAAA,GAAAA,KAACqF,GAAY,CAAC3D,QApDF,WACZ0F,GAAU,KAGdC,EAAUD,EAAS,IACnBK,EAAcD,EAAa,IAC7B,EA8CuCvH,UAC/BD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAA,OAAK8C,KAAM4E,GAAAA,EAAS,gBAGxB1H,EAAAA,GAAAA,KAACuF,GAAS,CAAAtF,UACRI,EAAAA,GAAAA,MAACiF,GAAU,CAAArF,SAAA,CAAEmH,EAAO,WAEtBpH,EAAAA,GAAAA,KAACqF,GAAY,CAAC3D,QApEF,WACZ0F,GAAU,MAGdC,EAAUD,EAAS,IACnBK,EAAcD,EAAa,IAC7B,EA8DuCvH,UAC/BD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAA,OAAK8C,KAAM4E,GAAAA,EAAS,kBAK1B1H,EAAAA,GAAAA,KAAC2H,GAAAA,GAAM,CACLC,cAAe,CAAEC,KApFF,SAAAhB,GACnB,IAAMiB,EAAcjB,EAAO,IAAI9E,KAAK8E,GAAQ,IAAI9E,KAChD,OAAO,IAAIA,KAAK+F,GAAaC,mBAAmB,GAAI,CAClDC,KAAM,UACNC,OAAQ,WAEZ,CA8E6BC,CAAarB,GAAOE,YAAaS,GACxDW,SAAU,SAAChI,EAAQiI,IA7DJ,SAAHlJ,GAAkB,IAC5BmJ,EADoBnJ,EAAJ2I,KACC7D,MAAM,KACvB8D,EAAc,IAAI/F,KACxB+F,EAAYQ,SAASD,EAAU,GAAIA,EAAU,IAC7C,IAAME,EAAUT,EAAYU,cAExBrC,IAAUe,GAAAA,EAAAA,WACZhF,GAASuG,EAAAA,GAAAA,IAAS,CAAE1B,YAAaK,EAAQP,KAAM0B,KAE7CpC,IAAUe,GAAAA,EAAAA,YACZhF,GAASwG,EAAAA,GAAAA,GAAU,CAAEnC,IAAAA,EAAKQ,YAAaK,EAAQP,KAAM0B,IAEzD,CAkDQI,CAAaxI,GACbiI,EAAQQ,YACR1G,GAAS2G,EAAAA,GAAAA,MACX,EACAC,aAAa,MAAK7I,UAElBI,EAAAA,GAAAA,MAACmF,GAAa,CAAAvF,SAAA,EACZI,EAAAA,GAAAA,MAACqF,GAAc,CAAAzF,SAAA,CAAC,mBAEdD,EAAAA,GAAAA,KAAC4F,GAAe,CAACmD,KAAK,OAAOC,KAAK,OAAOC,KAAK,YAEhD5I,EAAAA,GAAAA,MAACsF,GAAgB,CAAA1F,SAAA,CAAC,sCAEhBD,EAAAA,GAAAA,KAAC4F,GAAe,CACdmD,KAAK,cACLC,KAAK,SACLE,MAAO1B,EACP2B,QAjEQ,SAAAjI,GAClBA,EAAEE,OAAO8H,MAAQ,EACnB,EAgEYE,OApDO,SAAAlI,GACjB,GAAKA,EAAEE,OAAO8H,MAAd,CAKA,IAAMG,EAAMC,SAASpI,EAAEE,OAAO8H,MAAO,IACjCG,GAAO,GAAKA,GAAO,KACrBhC,EAAUgC,EAJZ,MAFEnI,EAAEE,OAAO8H,MAAQ9B,CAQrB,EA2CYmC,SA/DS,SAAArI,GACnB,IAAKA,EAAEE,OAAO8H,MAGZ,OAFAhI,EAAEE,OAAO8H,MAAQ,QACjBzB,EAAc,MAGhB,IAAM4B,EAAMC,SAASpI,EAAEE,OAAO8H,MAAO,IACrCzB,EAAc4B,EAChB,QA0DQhJ,EAAAA,GAAAA,MAAC2F,GAAa,CAAA/F,SAAA,EACZI,EAAAA,GAAAA,MAACyF,GAAW,CAAA7F,SAAA,CAAEmH,EAAO,SACrBpH,EAAAA,GAAAA,KAAC+F,GAAO,CAACiD,KAAK,SAAQ/I,UACpBD,EAAAA,GAAAA,KAAA,QAAAC,SAAM,qBAOpB,EC7JauJ,GAAgB,SAAAC,GAC3B,IAAMtD,GAAQ9D,EAAAA,GAAAA,IAAY4D,IACpB/D,GAAWC,EAAAA,GAAAA,OAEjBd,EAAAA,EAAAA,YAAU,WACR,GAAI8E,IAAUe,GAAAA,EAAAA,MAAd,CAIA,IAAMwC,EAAQ,SAAAxI,GACZ,IAAMyI,EAAsB,YAAXzI,EAAE8H,KAGP,WAAV9H,EAAE0I,MACAD,GAAaF,EAAO5J,QAAQsB,SAASD,EAAEE,UAEzCc,GAAS2G,EAAAA,GAAAA,MAEb,EAKA,OAHAgB,OAAOtI,iBAAiB,UAAWmI,GACnCG,OAAOtI,iBAAiB,YAAamI,GAE9B,WACLG,OAAOrI,oBAAoB,UAAWkI,GACtCG,OAAOrI,oBAAoB,YAAakI,EAC1C,CAnBA,CAoBF,GAAG,CAACD,EAAQvH,EAAUiE,GACxB,ECpBa2D,GAAW,WACtB,IAAM5H,GAAWC,EAAAA,GAAAA,MACX4H,GAAW/I,EAAAA,EAAAA,UAGjB,OAFAwI,GAAcO,IAGZ1J,EAAAA,GAAAA,MAAC+D,GAAK,CAACrD,IAAKgJ,EAAS9J,SAAA,EACnBI,EAAAA,GAAAA,MAACgE,GAAS,CAAApE,SAAA,EACRD,EAAAA,GAAAA,KAACuE,GAAW,CAAAtE,SAAC,eACbD,EAAAA,GAAAA,KAACsE,GAAQ,CAAC5C,QAAS,kBAAMQ,GAAS2G,EAAAA,GAAAA,MAAa,EAAC5I,UAC9CD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAA,OAAK8C,KAAM4E,GAAAA,EAAS,mBAI1B1H,EAAAA,GAAAA,KAACwE,GAAW,CAAAvE,SAAC,qBACbD,EAAAA,GAAAA,KAAC2G,GAAe,MAGtB,EC9BaqD,GAAiB1M,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,sRAgB3ByM,GAAa3M,GAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,GAAAA,GAAA,kOAGxBK,GAAAA,EAAAA,OAAAA,OAWEqM,GAAa5M,GAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,GAAAA,GAAA,2KAUvB2M,GAAU7M,GAAAA,GAAAA,GAASS,IAAAA,GAAAP,EAAAA,GAAAA,GAAA,wZAyBnB4M,GAAW9M,GAAAA,GAAAA,GAASW,IAAAA,GAAAT,EAAAA,GAAAA,GAAA,kNASJK,GAAAA,EAAAA,OAAAA,cAGhBwM,GAAW/M,GAAAA,GAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,GAAAA,GAAA,iZAoBpBK,GAAAA,EAAAA,OAAAA,MAKDyM,GAAUhN,GAAAA,GAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,GAAAA,GAAA,yHAWpB+M,GAAajN,GAAAA,GAAAA,EAAQoB,IAAAA,GAAAlB,EAAAA,GAAAA,GAAA,kEACvBK,GAAAA,EAAAA,OAAAA,MAKE2M,GAAWlN,GAAAA,GAAAA,EAAQsB,IAAAA,GAAApB,EAAAA,GAAAA,GAAA,+DACrBK,GAAAA,EAAAA,OAAAA,OAKE4M,GAAUnN,GAAAA,GAAAA,OAAawB,IAAAA,GAAAtB,EAAAA,GAAAA,GAAA,qMAQxBK,GAAAA,EAAAA,OAAAA,OAImBA,GAAAA,EAAAA,OAAAA,QAIlB6M,GAAYpN,GAAAA,GAAAA,OAAawH,IAAAA,GAAAtH,EAAAA,GAAAA,GAAA,qMAQ1BK,GAAAA,EAAAA,OAAAA,IAImBA,GAAAA,EAAAA,OAAAA,KAIlB8M,GAAcrN,GAAAA,GAAAA,OAAa0H,IAAAA,GAAAxH,EAAAA,GAAAA,GAAA,yWAI7BK,GAAAA,EAAAA,OAAAA,KAWGA,GAAAA,EAAAA,OAAAA,KAKDA,GAAAA,EAAAA,OAAAA,OAECA,GAAAA,EAAAA,OAAAA,QCtKD+M,GAAmB,WAC9B,IAAM1I,GAAWC,EAAAA,GAAAA,MACX0I,GAAiB7J,EAAAA,EAAAA,UACvBwI,GAAcqB,GAEd,IAAMtE,GAAMlE,EAAAA,GAAAA,IAAYiE,IAOxB,OACEjG,EAAAA,GAAAA,MAACwE,GAAW,CAAC9D,IAAK8J,EAAe5K,SAAA,EAC/BI,EAAAA,GAAAA,MAACgE,GAAS,CAAApE,SAAA,EACRD,EAAAA,GAAAA,KAACuE,GAAW,CAAAtE,SAAC,kBACbD,EAAAA,GAAAA,KAACsE,GAAQ,CAAC5C,QAAS,kBAAMQ,GAAS2G,EAAAA,GAAAA,MAAa,EAAC5I,UAC9CD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAA,OAAK8C,KAAM4E,GAAAA,EAAS,mBAK1B1H,EAAAA,GAAAA,KAAC+E,GAAiB,CAAA9E,SAAC,gDAGnBI,EAAAA,GAAAA,MAAC4E,GAAY,CAAAhF,SAAA,EACXD,EAAAA,GAAAA,KAAA,UAAQ0B,QAAS,kBAnBrBQ,GAAS4I,EAAAA,GAAAA,IAAYvE,SACrBrE,GAAS2G,EAAAA,GAAAA,MAkB4B,EAAC5I,SAAC,YACnCD,EAAAA,GAAAA,KAAA,UAAQ0B,QAAS,kBAAMQ,GAAS2G,EAAAA,GAAAA,MAAa,EAAC5I,SAAC,gBAIvD,E,WC5CM8K,GAAYzJ,SAAS0J,eAAe,cAE7BC,GAAa,SAAH/L,GAA4B,IAAtBgM,EAAIhM,EAAJgM,KAAMjL,EAAQf,EAARe,SACjC,OAAIiL,IAAShE,GAAAA,EAAAA,MAA6B,MAEnCiE,EAAAA,GAAAA,eACLnL,EAAAA,GAAAA,KAACmE,GAAc,CAAAlE,SAAEA,IAEjB8K,GAEJ,ECIaK,GAAY,WACvB,IAAMlJ,GAAWC,EAAAA,GAAAA,MACX4H,GAAW/I,EAAAA,EAAAA,UACjBwI,GAAcO,GACd,IAAAnD,GAA8BvE,EAAAA,GAAAA,IAAY+D,IAAlCS,EAAID,EAAJC,KAAME,EAAWH,EAAXG,YASd,OACE1G,EAAAA,GAAAA,MAACoE,GAAS,CAAC1D,IAAKgJ,EAAS9J,SAAA,EACvBI,EAAAA,GAAAA,MAACgE,GAAS,CAAApE,SAAA,EACRD,EAAAA,GAAAA,KAACuE,GAAW,CAAAtE,SAAC,sCACbD,EAAAA,GAAAA,KAACsE,GAAQ,CAAC5C,QAAS,kBAAMQ,GAAS2G,EAAAA,GAAAA,MAAa,EAAC5I,UAC9CD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAA,OAAK8C,KAAM4E,GAAAA,EAAS,mBAI1BrH,EAAAA,GAAAA,MAACqE,GAAY,CAAAzE,SAAA,EACXD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAA,OAAK8C,KAAM4E,GAAAA,EAAS,YAEtBrH,EAAAA,GAAAA,MAACsE,GAAc,CAAA1E,SAAA,CAAE8G,EAAY,UAC7B/G,EAAAA,GAAAA,KAAC4E,GAAY,CAAA3E,SAtBE,SAAA4G,GACnB,OAAO,IAAI9E,KAAK8E,GAAMkB,mBAAmB,QAAS,CAChDC,KAAM,UACNC,OAAQ,WAEZ,CAiBqBC,CAAarB,SAE9B7G,EAAAA,GAAAA,KAACwE,GAAW,CAAAvE,SAAC,2BACbD,EAAAA,GAAAA,KAAC2G,GAAe,MAGtB,ECpBa0E,GAAiB,WAC5B,IAAMC,GAASjJ,EAAAA,GAAAA,IAAY4D,IACrB/D,GAAWC,EAAAA,GAAAA,OAEjBd,EAAAA,EAAAA,YAAU,WACRa,GAASqJ,EAAAA,GAAAA,MACX,GAAG,CAACrJ,IAEJ,IAAQ+E,GAAe5E,EAAAA,GAAAA,IAAYmE,IAA3BS,WASFiB,EAAe,SAAArB,GACnB,OAAO,IAAI9E,KAAK8E,GAAMkB,mBAAmB,QAAS,CAChDC,KAAM,UACNC,OAAQ,WAEZ,EAEA,OACE5H,EAAAA,GAAAA,MAAC2J,GAAc,CAAA/J,SAAA,EACbD,EAAAA,GAAAA,KAACiK,GAAU,CAAAhK,SAAC,WACZD,EAAAA,GAAAA,KAACkK,GAAU,CAAAjK,UACTI,EAAAA,GAAAA,MAAC8J,GAAO,CAAAlK,SAAA,EACK,OAAVgH,QAAU,IAAVA,OAAU,EAAVA,EAAY7G,QAAS,EACpB6G,EAAWuE,KAAI,SAAAtM,GAAA,IAAG6H,EAAW7H,EAAX6H,YAAaF,EAAI3H,EAAJ2H,KAAMN,EAAGrH,EAAHqH,IAAG,OACtClG,EAAAA,GAAAA,MAAC+J,GAAQ,CAAAnK,SAAA,EACPI,EAAAA,GAAAA,MAACgK,GAAQ,CAAApK,SAAA,EACPD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAA,OAAK8C,KAAM4E,GAAAA,EAAS,YAEtBrH,EAAAA,GAAAA,MAACkK,GAAU,CAAAtK,SAAA,CAAE8G,EAAY,UACzB/G,EAAAA,GAAAA,KAACwK,GAAQ,CAAAvK,SAAEiI,EAAarB,SAE1BxG,EAAAA,GAAAA,MAACiK,GAAO,CAAArK,SAAA,EACND,EAAAA,GAAAA,KAACyK,GAAO,CAAC/I,QAAS,kBA9BnB+E,EA8BgC,CAAEM,YAAAA,EAAaF,KAAAA,EAAMN,IAAAA,QA7BlErE,GAASuJ,EAAAA,GAAAA,IAAchF,IADV,IAAAA,CA8B2D,EAACxG,UACzDD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAA,OAAK8C,KAAM4E,GAAAA,EAAS,eAGxB1H,EAAAA,GAAAA,KAAC0K,GAAS,CAAChJ,QAAS,kBAhCnBgK,EAgCkCnF,OA/BjDrE,GAASyJ,EAAAA,GAAAA,IAAgB,CAAEpF,IAAKmF,KADjB,IAAAA,CAgCsC,EAACzL,UACtCD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAA,OAAK8C,KAAM4E,GAAAA,EAAS,oBAhBbnB,EAoBJ,KAGbvG,EAAAA,GAAAA,KAAA,MAAAC,UACED,EAAAA,GAAAA,KAAA,KAAAC,SAAG,oBAGPD,EAAAA,GAAAA,KAAA,MAAAC,UACEI,EAAAA,GAAAA,MAACsK,GAAW,CAACjJ,QAAS,kBAAMQ,GAAS0J,EAAAA,GAAAA,MAAe,EAAC3L,SAAA,EACnDD,EAAAA,GAAAA,KAAA,OAAAC,UACED,EAAAA,GAAAA,KAAA,OAAK8C,KAAM4E,GAAAA,EAAS,YAChB,uBAOdrH,EAAAA,GAAAA,MAAC4K,GAAU,CAACC,KAAMI,EAAOrL,SAAA,CACtBqL,IAAWpE,GAAAA,EAAAA,YAA4BlH,EAAAA,GAAAA,KAAC8J,GAAQ,IAChDwB,IAAWpE,GAAAA,EAAAA,eAA+BlH,EAAAA,GAAAA,KAAC4K,GAAgB,IAC3DU,IAAWpE,GAAAA,EAAAA,aAA6BlH,EAAAA,GAAAA,KAACoL,GAAS,SAI3D,ECzGaS,GAAmBvO,GAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,GAAAA,GAAA,uWAO1BK,GAAAA,EAAAA,OAAAA,MCGhB,GATiB,WACf,OACEwC,EAAAA,GAAAA,MAACwL,GAAgB,CAAA5L,SAAA,EACfD,EAAAA,GAAAA,KAACqL,GAAc,KACfrL,EAAAA,GAAAA,KAAC8B,GAAQ,MAGf,C","sources":["redux/month/selectors.js","components/Calendar/Month/Month.styled.js","components/Calendar/Modal/CalendarModal.styled.js","components/Calendar/Modal/CalendarModal.jsx","components/Calendar/Month/Day.jsx","components/Calendar/Month/Month.jsx","components/WaterModals/WaterModals.styled.js","components/WaterEditorForm/WaterEditorForm.styled.js","redux/modals/selectors.js","redux/water/selectors.js","components/WaterEditorForm/WaterEditorForm.jsx","hooks/useModal.js","components/WaterModals/AddWater.jsx","components/TodayWaterList/TodayList.styled.js","components/WaterModals/DeleteWaterModal.jsx","components/WaterModals/WaterModal.jsx","components/WaterModals/EditWater.jsx","components/TodayWaterList/TodayWaterList.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["export const selectorWaterMonth = state => state.dataMonth.data;\n","import styled from 'styled-components';\nimport { baseTheme } from '../../theme';\n\nexport const CalendarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* height: 506px; */\n\n  @media screen and (min-width: 768px) {\n    /* height: 340px; */\n  }\n  @media screen and (min-width: 1440px) {\n    /* height: 332px; */\n  }\n`;\n\nexport const MonthNav = styled.div`\n  display: flex;\n  margin-bottom: 16px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const MonthTitle = styled.h2`\n  color: ${baseTheme.colors.black};\n  font-size: 24px;\n  font-weight: 500;\n  line-height: calc(30 / 24);\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    line-height: calc(32 / 26);\n  }\n`;\n\nexport const ArrowButton = styled.button`\n  width: 14px;\n  height: 14px;\n  padding: 0;\n  cursor: pointer;\n  margin: 0 10px;\n  background-color: transparent;\n  border: none;\n  fill: ${baseTheme.colors.blue};\n\n  &:disabled {\n    fill: ${baseTheme.colors.violet};\n    cursor: not-allowed;\n  }\n`;\n\nexport const Day = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  outline: ${props =>\n    props.$isOutlineVisible ? `1px solid ${baseTheme.colors.orange}` : 'none'};\n  cursor: pointer;\n  font-size: 14px;\n  line-height: 18px;\n\n  @media screen and (min-width: 768px) {\n    gap: 34px;\n    row-gap: 20px;\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const MonthControl = styled.div`\n  color: ${baseTheme.colors.blue};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Month = styled.span`\n  font-size: 16px;\n  line-height: 20px;\n`;\n\nexport const DayPercent = styled.span`\n  color: ${baseTheme.colors.violet};\n\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  align-items: center;\n  margin-top: 4px;\n  line-height: calc(16 / 10);\n  @media screen and (min-width: 768px) {\n    font-size: 13px;\n    line-height: calc(20 / 13);\n  }\n  @media screen and (min-width: 1440px) {\n    font-size: 12px;\n    line-height: calc(18 / 12);\n  }\n`;\n\nexport const DaysContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n\n  column-gap: 26px;\n  row-gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    column-gap: 34px;\n    row-gap: 20px;\n    column-gap: 34px;\n  }\n  @media screen and (min-width: 1440px) {\n    column-gap: 22px;\n  }\n`;\n\nexport const DayCell = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n`;\n","import styled from 'styled-components';\nimport { baseTheme } from '../../../components/theme';\n\nexport const CalendarModalStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 280px;\n  position: absolute;\n  bottom: 54px;\n\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0px 4px 4px 0px rgba(64, 123, 255, 0.3);\n  padding: 24px 13px;\n  transform-origin: bottom;\n  z-index: 2;\n\n  @media screen and (max-width: 767px) {\n    left: ${props => -7 - props.$deltaNum}px;\n  }\n\n  @media screen and (min-width: 768px) {\n    right: ${props => (props.$delta ? '17px' : '')};\n    left: ${props => (props.$delta ? '' : '17px')};\n    padding: 24px 16px;\n    width: 292px;\n    bottom: 58px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    bottom: 56px;\n  }\n\n  h3 {\n    color: ${baseTheme.colors.blue};\n    font-size: '16px';\n    line-height: calc(20 / 16);\n  }\n  p {\n    color: ${baseTheme.colors.black};\n    font-size: '16px';\n    line-height: calc(20 / 16);\n    span {\n      color: ${baseTheme.colors.blue};\n      font-size: '18px';\n      font-weight: 500;\n      line-height: calc(24 / 18);\n    }\n  }\n`;\n","import { CalendarModalStyles } from './CalendarModal.styled';\n\nconst CalendarModal = ({ calendarRef, refData, waterData = {} }) => {\n  const { dayOfMonth, waterRate, percent, numberRecords } = waterData;\n\n  const currentRef = refData?.current.getBoundingClientRect().left;\n  const containerRef = calendarRef?.current.getBoundingClientRect().left;\n\n  let position = true;\n\n  const delta = currentRef - containerRef;\n  if (delta < 250) {\n    position = false;\n  }\n\n  return (\n    <CalendarModalStyles $delta={position} $deltaNum={delta}>\n      {Object.values(waterData).length ? (\n        <>\n          <h3>{dayOfMonth}</h3>\n          <p>\n            Daily norma: <span>{waterRate / 1000} L</span>\n          </p>\n          <p>\n            Fulfillment of the daily norm:{' '}\n            <span>{percent > 100 ? 100 : percent}%</span>\n          </p>\n          <p>\n            How many servings of water: <span>{numberRecords}</span>\n          </p>\n        </>\n      ) : (\n        <h3>You don't have records of this day.</h3>\n      )}\n    </CalendarModalStyles>\n  );\n};\n\nexport default CalendarModal;\n","import { useEffect, useRef, useState } from 'react';\nimport { Day, DayCell, DayPercent } from './Month.styled';\nimport CalendarModal from '../Modal/CalendarModal';\n\nconst DayComponent = ({ calendarRef, day, waterPercentage }) => {\n  const [activeModal, setActiveModal] = useState(null);\n  const ref = useRef(null);\n\n  const handleClick = e => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      setActiveModal(null);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  const toggleModal = () => {\n    setActiveModal(prevModal => (prevModal === day ? null : day));\n  };\n\n  return (\n    <DayCell key={day}>\n      <div>\n        {activeModal === day && (\n          <CalendarModal\n            key={day}\n            calendarRef={calendarRef}\n            refData={ref}\n            waterData={waterPercentage}\n          />\n        )}\n      </div>\n      <Day\n        ref={ref}\n        onClick={() => toggleModal(day)}\n        $isOutlineVisible={!waterPercentage || waterPercentage.percent < 100}\n      >\n        {day}\n      </Day>\n      <DayPercent>\n        {waterPercentage ? `${Math.min(waterPercentage.percent, 100)}%` : '0%'}\n      </DayPercent>\n    </DayCell>\n  );\n};\n\nexport default DayComponent;\n","import { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchMonthThunk } from 'redux/month/operations';\nimport { selectorWaterMonth } from 'redux/month/selectors';\n\nimport Icons from '../../../images/sprite.svg';\nimport DayComponent from './Day';\n\nimport {\n  ArrowButton,\n  CalendarContainer,\n  DaysContainer,\n  MonthNav,\n  MonthControl,\n  Month,\n  MonthTitle,\n} from './Month.styled';\n\nexport const Calendar = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const dispatch = useDispatch();\n  const waterForMonth = useSelector(selectorWaterMonth);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    const month = `${\n      currentDate.getMonth() + 1\n    } - ${currentDate.getFullYear()}`;\n\n    dispatch(fetchMonthThunk(month));\n  }, [dispatch, currentDate]);\n\n  const handleNextMonth = () => {\n    const nextMonthDate = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() + 1,\n      1\n    );\n    setCurrentDate(nextMonthDate);\n  };\n\n  const handlePrevMonth = () => {\n    const prevMonthDate = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() - 1,\n      1\n    );\n    setCurrentDate(prevMonthDate);\n  };\n\n  const isCurrentMonth = () => {\n    const today = new Date();\n    return (\n      currentDate.getMonth() === today.getMonth() &&\n      currentDate.getFullYear() === today.getFullYear()\n    );\n  };\n\n  const getDaysInMonth = () => {\n    return new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() + 1,\n      0\n    ).getDate();\n  };\n\n  const renderDays = () => {\n    const daysInMonth = getDaysInMonth();\n    return Array.from({ length: daysInMonth }, (_, index) => {\n      const day = index + 1;\n      const waterPercentage = waterForMonth?.find(\n        item => item.dayOfMonth && Number(item.dayOfMonth.split(',')[0]) === day\n      );\n\n      return (\n        <DayComponent\n          key={day}\n          calendarRef={ref}\n          day={day}\n          waterPercentage={waterPercentage}\n        />\n      );\n    });\n  };\n\n  return (\n    <CalendarContainer className=\"calendar\" ref={ref}>\n      <MonthNav>\n        <MonthTitle>Month</MonthTitle>\n        <MonthControl>\n          <ArrowButton aria-label=\"Previous month\" onClick={handlePrevMonth}>\n            <svg width=\"14\" height=\"14\">\n              <use href={Icons + '#arrow-left'}></use>\n            </svg>\n          </ArrowButton>\n          <Month>\n            {new Intl.DateTimeFormat('en-US', { month: 'long' }).format(\n              currentDate\n            )}\n          </Month>\n          <ArrowButton\n            aria-label=\"Next month\"\n            onClick={handleNextMonth}\n            disabled={isCurrentMonth()}\n          >\n            <svg width=\"14\" height=\"14\">\n              <use href={Icons + '#arrow-right'}></use>\n            </svg>\n          </ArrowButton>\n        </MonthControl>\n      </MonthNav>\n      <DaysContainer>{renderDays()}</DaysContainer>\n    </CalendarContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { baseTheme } from 'components/theme';\n\nexport const ModalContainer = styled.aside`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.8);\n  z-index: 10;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Modal = styled.div`\n  width: 280px;\n  height: 540px;\n  padding: 24px 12px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  border-radius: 10px;\n  background: ${baseTheme.colors.white};\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 504px;\n    padding: 32px 24px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 592px;\n  }\n`;\n\nexport const ModalHead = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n`;\n\nexport const CloseBtn = styled.button`\n  border: none;\n  background-color: transparent;\n\n  & svg {\n    width: 24px;\n    height: 24px;\n  }\n\n  & use {\n    fill: ${baseTheme.colors.blue};\n  }\n\n  &:hover use {\n    fill: ${baseTheme.colors.orange};\n  }\n`;\n\nexport const ModalHeader = styled.h3`\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 1.23;\n`;\n\nexport const SmaleHeader = styled.h4`\n  margin-bottom: 16px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n`;\n\nexport const ModalEdit = styled.div`\n  width: 280px;\n  height: 648px;\n  padding: 24px 12px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  border-radius: 10px;\n  background: ${baseTheme.colors.white};\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 580px;\n    padding: 32px 24px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 592px;\n  }\n`;\n\nexport const InfoEditWrap = styled.div`\n  width: 256px;\n  height: 52px;\n  padding: 8px 24px;\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 10px;\n  background: ${baseTheme.colors.grey};\n\n  & svg {\n    width: 36px;\n    height: 36px;\n\n    @media screen and (min-width: 768px) {\n      width: 36px;\n      height: 36px;\n    }\n    @media only screen and (min-width: 1440px) {\n    }\n    & use {\n      x: 5px;\n      y: 3px;\n      fill: ${baseTheme.colors.blue};\n    }\n  }\n`;\n\nexport const TextEditVolume = styled.p`\n  color: ${baseTheme.colors.blue};\n  font-size: 18px;\n  line-height: 1.33;\n  height: 60%;\n`;\n\nexport const TextEditTime = styled.p`\n  color: ${baseTheme.colors.black};\n  font-size: 12px;\n  line-height: 2;\n`;\n\nexport const ModalDelete = styled.div`\n  width: 280px;\n  height: 280px;\n  padding: 32px 24px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  border-radius: 10px;\n  background: ${baseTheme.colors.white};\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    width: 592px;\n    height: 208px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 592px;\n  }\n`;\n\nexport const SmaleDeleteHeader = styled.h4`\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n  text-align: left;\n`;\n\nexport const DivDeleteBtn = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 24px;\n  flex-direction: column;\n\n  & button {\n    display: flex;\n    padding: 8px 30px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n\n    color: ${baseTheme.colors.blue};\n\n    line-height: 1.25;\n\n    border: none;\n    border-radius: 10px;\n    background: ${baseTheme.colors.violet_light};\n\n    &:first-child {\n      color: ${baseTheme.colors.white};\n      background: ${baseTheme.colors.red};\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    height: 44px;\n    gap: 24px;\n    flex-direction: row-reverse;\n\n    & button {\n      width: 160px;\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\nimport { baseTheme } from 'components/theme';\n\nexport const InputText = styled.p`\n  margin-bottom: 12px;\n  line-height: 1.25;\n`;\n\nexport const AmountContainer = styled.div`\n  width: 194px;\n  height: 44px;\n  margin-bottom: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const PlusMinusBtn = styled.button`\n  width: 44px;\n  height: 44px;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-radius: 30px;\n  border: 1px solid #9ebbff;\n  background: #fff;\n  box-shadow: 0px 2px 4px 0px rgba(64, 123, 255, 0.2);\n\n  & svg {\n    width: 24px;\n    height: 24px;\n  }\n\n  & use {\n    fill: #407bff;\n  }\n\n  &:hover use {\n    fill: #ff9d43;\n  }\n`;\n\nexport const AmountSpan = styled.span`\n  color: ${baseTheme.colors.blue};\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n`;\n\nexport const AmountDiv = styled.div`\n  width: 92px;\n  height: 36px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  border-radius: 40px;\n  background: ${baseTheme.colors.violet_light};\n`;\n\nexport const FormContainer = styled(Form)`\n  width: 100%;\n`;\n\nexport const InputTimeLable = styled.label`\n  text-align: left;\n  margin-bottom: 24px;\n  line-height: 1.25;\n  display: flex;\n  gap: 12px;\n  flex-direction: column;\n`;\n\nexport const InputVolumeLable = styled.label`\n  margin-bottom: 16px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.11;\n\n  text-align: left;\n  margin-bottom: 24px;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n`;\n\nexport const TimeVolumeInput = styled(Field)`\n  width: 120px;\n  height: 44px;\n  border-radius: 6px;\n  border: 1px solid ${baseTheme.colors.violet_light};\n  margin: 0;\n  padding: 12px 10px;\n  position: relative;\n\n  color: ${baseTheme.colors.blue};\n  line-height: 1.25;\n\n  &::-webkit-calendar-picker-indicator {\n    display: block;\n    top: 0;\n    right: 0;\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    background: transparent;\n  }\n\n  &:focus-visible {\n    outline: 0;\n    outline-offset: 0;\n  }\n\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n  }\n  @media only screen and (min-width: 1440px) {\n  }\n`;\n\nexport const AmountLable = styled.label`\n  margin-bottom: 16px;\n  color: ${baseTheme.colors.blue};\n  text-align: center;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.33;\n\n  @media screen and (min-width: 768px) {\n    width: 72px;\n    height: 24px;\n    margin: 0;\n  }\n  @media only screen and (min-width: 1440px) {\n  }\n`;\n\nexport const SaveBtn = styled.button`\n  width: 100%;\n  display: flex;\n  padding: 8px 30px;\n  justify-content: center;\n  align-items: center;\n  border: none;\n  border-radius: 10px;\n  background: ${baseTheme.colors.blue};\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n  & span {\n    color: ${baseTheme.colors.white};\n    line-height: 1.25;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 160px;\n    height: 44px;\n  }\n  @media only screen and (min-width: 1440px) {\n  }\n`;\n\nexport const SaveVolumeDiv = styled.div`\n  @media screen and (min-width: 768px) {\n    width: 100%;\n    height: 44px;\n    display: flex;\n    justify-content: flex-end;\n    gap: 24px;\n    align-items: center;\n  }\n  @media only screen and (min-width: 1440px) {\n  }\n`;\n","export const selectModalType = state => state.modals.modal;\n\nexport const selectModalWater = state => state.modals.waterInModal;\n\nexport const selectModalIdWater = state => state.modals.waterInModal._id;\n\nexport const selectModalAmount = state => state.modals.waterInModal.amountWater;\n\nexport const selectModalDate = state => state.modals.waterInModal.data;\n","export const selectTodayWater = state => state.water.items;\n\nexport const selectIsLoading = state => state.water.isLoading;\n\nexport const selectError = state => state.water.error;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport {\n  AmountContainer,\n  AmountDiv,\n  AmountSpan,\n  PlusMinusBtn,\n  SaveBtn,\n  InputText,\n  InputTimeLable,\n  InputVolumeLable,\n  TimeVolumeInput,\n  AmountLable,\n  SaveVolumeDiv,\n  FormContainer,\n} from './WaterEditorForm.styled';\nimport sprite from '../../images/sprite.svg';\nimport { addWater, editWater } from 'redux/water/operations';\nimport { closeModal } from 'redux/modals/modalsSlice';\nimport modalConstants from 'redux/modals/modalСonstants';\nimport { selectModalType, selectModalWater } from 'redux/modals/selectors';\nimport { selectTodayWater } from 'redux/water/selectors';\n\nexport const WaterEditorForm = () => {\n  const dispatch = useDispatch();\n\n  const { _id, date, amountWater } = useSelector(selectModalWater);\n  let startAmount = amountWater;\n\n  const isAdd = useSelector(selectModalType);\n  const { waterNotes } = useSelector(selectTodayWater);\n  if (isAdd === modalConstants.ADD_WATER) {\n    const nRecords = waterNotes.length;\n    if (nRecords > 0) {\n      startAmount = waterNotes[nRecords - 1].amountWater;\n    }\n  }\n\n  const modal = useSelector(selectModalType);\n\n  const [volume, setVolume] = useState(startAmount);\n\n  const [tempVolume, setTempVolume] = useState(volume);\n\n  const timeFromDate = date => {\n    const currentdate = date ? new Date(date) : new Date();\n    return new Date(currentdate).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  const increment = () => {\n    if (volume >= 2000) {\n      return;\n    }\n    setVolume(volume + 50);\n    setTempVolume(tempVolume + 50);\n  };\n\n  const decrement = () => {\n    if (volume <= 50) {\n      return;\n    }\n    setVolume(volume - 50);\n    setTempVolume(tempVolume - 50);\n  };\n\n  const handleSubmit = ({ time }) => {\n    const inputTime = time.split(':');\n    const currentdate = new Date();\n    currentdate.setHours(inputTime[0], inputTime[1]);\n    const setDate = currentdate.toISOString();\n\n    if (modal === modalConstants.ADD_WATER) {\n      dispatch(addWater({ amountWater: volume, date: setDate }));\n    }\n    if (modal === modalConstants.EDIT_WATER) {\n      dispatch(editWater({ _id, amountWater: volume, date: setDate }));\n    }\n  };\n\n  const handelFocus = e => {\n    e.target.value = '';\n  };\n\n  const handelChange = e => {\n    if (!e.target.value) {\n      e.target.value = '';\n      setTempVolume(null);\n      return;\n    }\n    const val = parseInt(e.target.value, 10);\n    setTempVolume(val);\n  };\n\n  const handelBlur = e => {\n    if (!e.target.value) {\n      e.target.value = volume;\n      return;\n    }\n\n    const val = parseInt(e.target.value, 10);\n    if (val >= 0 && val <= 2000) {\n      setVolume(val);\n    }\n  };\n\n  return (\n    <>\n      <InputText>Amount of water:</InputText>\n      <AmountContainer>\n        <PlusMinusBtn onClick={decrement}>\n          <svg>\n            <use href={sprite + '#minus'}></use>\n          </svg>\n        </PlusMinusBtn>\n        <AmountDiv>\n          <AmountSpan>{volume}ml</AmountSpan>\n        </AmountDiv>\n        <PlusMinusBtn onClick={increment}>\n          <svg>\n            <use href={sprite + '#plus'}></use>\n          </svg>\n        </PlusMinusBtn>\n      </AmountContainer>\n\n      <Formik\n        initialValues={{ time: timeFromDate(date), amountWater: tempVolume }}\n        onSubmit={(values, actions) => {\n          handleSubmit(values);\n          actions.resetForm();\n          dispatch(closeModal());\n        }}\n        autoComplete=\"off\"\n      >\n        <FormContainer>\n          <InputTimeLable>\n            Recording time:\n            <TimeVolumeInput name=\"time\" type=\"time\" step=\"300\" />\n          </InputTimeLable>\n          <InputVolumeLable>\n            Enter the value of the water used:\n            <TimeVolumeInput\n              name=\"amountWater\"\n              type=\"number\"\n              value={tempVolume}\n              onFocus={handelFocus}\n              onBlur={handelBlur}\n              onChange={handelChange}\n            />\n          </InputVolumeLable>\n          <SaveVolumeDiv>\n            <AmountLable>{volume}ml</AmountLable>\n            <SaveBtn type=\"submit\">\n              <span>Save</span>\n            </SaveBtn>\n          </SaveVolumeDiv>\n        </FormContainer>\n      </Formik>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from 'redux/modals/modalsSlice';\nimport modalConstants from 'redux/modals/modalСonstants';\nimport { selectModalType } from 'redux/modals/selectors';\n\nexport const useModalClose = modRef => {\n  const modal = useSelector(selectModalType);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (modal === modalConstants.CLOSE) {\n      return;\n    }\n\n    const close = e => {\n      const isButton = e.type === 'keydown';\n\n      if (\n        e.key === 'Escape' ||\n        (!isButton && !modRef.current.contains(e.target))\n      ) {\n        dispatch(closeModal());\n      }\n    };\n\n    window.addEventListener('keydown', close);\n    window.addEventListener('mousedown', close);\n\n    return () => {\n      window.removeEventListener('keydown', close);\n      window.removeEventListener('mousedown', close);\n    };\n  }, [modRef, dispatch, modal]);\n};\n","import {\n  CloseBtn,\n  Modal,\n  ModalHead,\n  ModalHeader,\n  SmaleHeader,\n} from './WaterModals.styled';\nimport sprite from '../../images/sprite.svg';\nimport { WaterEditorForm } from 'components/WaterEditorForm/WaterEditorForm';\nimport { useDispatch } from 'react-redux';\nimport { closeModal } from 'redux/modals/modalsSlice';\nimport { useRef } from 'react';\nimport { useModalClose } from 'hooks/useModal';\n\nexport const AddWater = () => {\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n  useModalClose(modalRef);\n\n  return (\n    <Modal ref={modalRef}>\n      <ModalHead>\n        <ModalHeader>Add water</ModalHeader>\n        <CloseBtn onClick={() => dispatch(closeModal())}>\n          <svg>\n            <use href={sprite + '#close'}></use>\n          </svg>\n        </CloseBtn>\n      </ModalHead>\n      <SmaleHeader>Choose a value:</SmaleHeader>\n      <WaterEditorForm />\n    </Modal>\n  );\n};\n","import { baseTheme } from 'components/theme';\nimport styled from 'styled-components';\n\nexport const TodayStyledDiv = styled.div`\n  max-width: 264px;\n  max-height: 258px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 656px;\n    height: 276px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 544px;\n    height: 260px;\n  }\n`;\n\nexport const TodayStyle = styled.h2`\n  margin-bottom: 16px;\n  text-align: left;\n  color: ${baseTheme.colors.black};\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.23;\n\n  @media screen and (min-width: 768px) {\n    font-size: 26px;\n    font-weight: 500;\n  }\n`;\n\nexport const ListAddDiv = styled.div`\n  width: inherit;\n  max-height: 212px;\n  @media screen and (min-width: 768px) {\n    height: 260px;\n  }\n  @media only screen and (min-width: 1440px) {\n  }\n`;\n\nexport const UlStyle = styled.ul`\n  height: 212px;\n  overflow-y: auto;\n\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n    margin-block: 5px;\n    background: #d7e3ff;\n    border-radius: 50px;\n    border: 1px solid #ecf2ff;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: #9ebbff;\n    border-radius: 50px;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: #407bff;\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  gap: 38px;\n\n  padding: 0 0 12px 0;\n  margin: 12px 4px 0 4px;\n  border-bottom: 1px solid ${baseTheme.colors.violet_light};\n`;\n\nexport const InfoWrap = styled.div`\n  width: 166px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n\n  & svg {\n    width: 26px;\n    height: 26px;\n\n    @media screen and (min-width: 768px) {\n      width: 36px;\n      height: 36px;\n    }\n    @media only screen and (min-width: 1440px) {\n    }\n    & use {\n      x: 5px;\n      y: 3px;\n      fill: ${baseTheme.colors.blue};\n    }\n  }\n`;\n\nexport const WrapBtn = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 18px;\n\n  & svg {\n    width: 16px;\n    height: 16px;\n  }\n`;\n\nexport const TextVolume = styled.p`\n  color: ${baseTheme.colors.blue};\n  font-size: 18px;\n  line-height: 1.33;\n`;\n\nexport const TextTime = styled.p`\n  color: ${baseTheme.colors.black};\n  font-size: 12px;\n  line-height: 2;\n`;\n\nexport const EditBtn = styled.button`\n  width: 16px;\n  height: 18px;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n\n  & use {\n    fill: ${baseTheme.colors.violet};\n  }\n\n  &:hover {\n    border-bottom: 1px solid ${baseTheme.colors.violet};\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  width: 16px;\n  height: 18px;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n\n  & use {\n    fill: ${baseTheme.colors.red};\n  }\n\n  &:hover {\n    border-bottom: 1px solid ${baseTheme.colors.red};\n  }\n`;\n\nexport const AddBtnStyle = styled.button`\n  display: flex;\n  gap: 8px;\n  padding: 12px 0 0 0;\n  color: ${baseTheme.colors.blue};\n  border: none;\n  background-color: transparent;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n\n  & svg {\n    width: 16px;\n    height: 16px;\n    & use {\n      fill: ${baseTheme.colors.blue};\n    }\n  }\n\n  &:hover {\n    color: ${baseTheme.colors.orange};\n    & use {\n      fill: ${baseTheme.colors.orange};\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  CloseBtn,\n  DivDeleteBtn,\n  ModalDelete,\n  ModalHead,\n  ModalHeader,\n  SmaleDeleteHeader,\n} from './WaterModals.styled';\nimport { useRef } from 'react';\nimport { useModalClose } from 'hooks/useModal';\nimport { closeModal } from 'redux/modals/modalsSlice';\nimport sprite from '../../images/sprite.svg';\nimport { deleteWater } from 'redux/water/operations';\nimport { selectModalIdWater } from 'redux/modals/selectors';\n\nexport const DeleteWaterModal = () => {\n  const dispatch = useDispatch();\n  const modaldeleteRef = useRef();\n  useModalClose(modaldeleteRef);\n\n  const _id = useSelector(selectModalIdWater);\n\n  const onDelete = () => {\n    dispatch(deleteWater(_id));\n    dispatch(closeModal());\n  };\n\n  return (\n    <ModalDelete ref={modaldeleteRef}>\n      <ModalHead>\n        <ModalHeader>Delete entry</ModalHeader>\n        <CloseBtn onClick={() => dispatch(closeModal())}>\n          <svg>\n            <use href={sprite + '#close'}></use>\n          </svg>\n        </CloseBtn>\n      </ModalHead>\n\n      <SmaleDeleteHeader>\n        Are you sure you want to delete the entry?\n      </SmaleDeleteHeader>\n      <DivDeleteBtn>\n        <button onClick={() => onDelete()}>Delete</button>\n        <button onClick={() => dispatch(closeModal())}>Cancel</button>\n      </DivDeleteBtn>\n    </ModalDelete>\n  );\n};\n","import { ModalContainer } from './WaterModals.styled';\nimport { createPortal } from 'react-dom';\nimport modalConstants from 'redux/modals/modalСonstants';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport const WaterModal = ({ open, children }) => {\n  if (open === modalConstants.CLOSE) return null;\n\n  return createPortal(\n    <ModalContainer>{children}</ModalContainer>,\n\n    modalRoot\n  );\n};\n","import {\n  CloseBtn,\n  InfoEditWrap,\n  ModalEdit,\n  ModalHead,\n  ModalHeader,\n  SmaleHeader,\n  TextEditTime,\n  TextEditVolume,\n} from './WaterModals.styled';\nimport sprite from '../../images/sprite.svg';\nimport { WaterEditorForm } from 'components/WaterEditorForm/WaterEditorForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from 'redux/modals/modalsSlice';\nimport { useRef } from 'react';\nimport { useModalClose } from 'hooks/useModal';\nimport { selectModalWater } from 'redux/modals/selectors';\n\nexport const EditWater = () => {\n  const dispatch = useDispatch();\n  const modalRef = useRef();\n  useModalClose(modalRef);\n  const { date, amountWater } = useSelector(selectModalWater);\n\n  const timeFromDate = date => {\n    return new Date(date).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  return (\n    <ModalEdit ref={modalRef}>\n      <ModalHead>\n        <ModalHeader>Edit the entered amount of water</ModalHeader>\n        <CloseBtn onClick={() => dispatch(closeModal())}>\n          <svg>\n            <use href={sprite + '#close'}></use>\n          </svg>\n        </CloseBtn>\n      </ModalHead>\n      <InfoEditWrap>\n        <svg>\n          <use href={sprite + '#cup'}></use>\n        </svg>\n        <TextEditVolume>{amountWater} ml</TextEditVolume>\n        <TextEditTime>{timeFromDate(date)}</TextEditTime>\n      </InfoEditWrap>\n      <SmaleHeader>Correct entered data:</SmaleHeader>\n      <WaterEditorForm />\n    </ModalEdit>\n  );\n};\n","import { AddWater } from 'components/WaterModals/AddWater';\nimport sprite from '../../images/sprite.svg';\nimport {\n  AddBtnStyle,\n  DeleteBtn,\n  EditBtn,\n  ListItem,\n  TextTime,\n  TextVolume,\n  TodayStyle,\n  InfoWrap,\n  WrapBtn,\n  TodayStyledDiv,\n  ListAddDiv,\n  UlStyle,\n} from './TodayList.styled';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport {\n  openAddWater,\n  openDeleteWater,\n  openEditWater,\n} from 'redux/modals/modalsSlice';\nimport modalConstants from 'redux/modals/modalСonstants';\nimport { fetchTodayWater } from 'redux/water/operations';\nimport { selectTodayWater } from 'redux/water/selectors';\nimport { useEffect } from 'react';\nimport { DeleteWaterModal } from 'components/WaterModals/DeleteWaterModal';\nimport { WaterModal } from 'components/WaterModals/WaterModal';\nimport { EditWater } from 'components/WaterModals/EditWater';\nimport { selectModalType } from 'redux/modals/selectors';\n\nexport const TodayWaterList = () => {\n  const isOpen = useSelector(selectModalType);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTodayWater());\n  }, [dispatch]);\n\n  const { waterNotes } = useSelector(selectTodayWater);\n\n  const onEdit = water => {\n    dispatch(openEditWater(water));\n  };\n  const onDelete = id => {\n    dispatch(openDeleteWater({ _id: id }));\n  };\n\n  const timeFromDate = date => {\n    return new Date(date).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n  };\n\n  return (\n    <TodayStyledDiv>\n      <TodayStyle>Today</TodayStyle>\n      <ListAddDiv>\n        <UlStyle>\n          {waterNotes?.length > 0 ? (\n            waterNotes.map(({ amountWater, date, _id }) => (\n              <ListItem key={_id}>\n                <InfoWrap>\n                  <svg>\n                    <use href={sprite + '#cup'}></use>\n                  </svg>\n                  <TextVolume>{amountWater} ml</TextVolume>\n                  <TextTime>{timeFromDate(date)}</TextTime>\n                </InfoWrap>\n                <WrapBtn>\n                  <EditBtn onClick={() => onEdit({ amountWater, date, _id })}>\n                    <svg>\n                      <use href={sprite + '#edit'}></use>\n                    </svg>\n                  </EditBtn>\n                  <DeleteBtn onClick={() => onDelete(_id)}>\n                    <svg>\n                      <use href={sprite + '#trash'}></use>\n                    </svg>\n                  </DeleteBtn>\n                </WrapBtn>\n              </ListItem>\n            ))\n          ) : (\n            <li>\n              <p>No notes yet</p>\n            </li>\n          )}\n          <li>\n            <AddBtnStyle onClick={() => dispatch(openAddWater())}>\n              <svg>\n                <use href={sprite + '#plus'}></use>\n              </svg>\n              Add water\n            </AddBtnStyle>\n          </li>\n        </UlStyle>\n      </ListAddDiv>\n\n      <WaterModal open={isOpen}>\n        {isOpen === modalConstants.ADD_WATER && <AddWater />}\n        {isOpen === modalConstants.DELETE_WATER && <DeleteWaterModal />}\n        {isOpen === modalConstants.EDIT_WATER && <EditWater />}\n      </WaterModal>\n    </TodayStyledDiv>\n  );\n};\n","import { baseTheme } from 'components/theme';\nimport styled from 'styled-components';\n\nexport const TrackerContainer = styled.div`\n  padding: 24px 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  border-radius: 10px;\n  background: ${baseTheme.colors.grey};\n  box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.3);\n\n  @media screen and (min-width: 768px) {\n    padding: 32px 24px;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 592px;\n    height: 690px;\n  }\n`;\n","import { Calendar } from 'components/Calendar/Month/Month';\nimport { TodayWaterList } from 'components/TodayWaterList/TodayWaterList';\nimport { TrackerContainer } from './HomePage.styled';\n\nconst HomePage = () => {\n  return (\n    <TrackerContainer>\n      <TodayWaterList />\n      <Calendar />\n    </TrackerContainer>\n  );\n};\n\nexport default HomePage;\n"],"names":["selectorWaterMonth","state","dataMonth","data","CalendarContainer","styled","_templateObject","_taggedTemplateLiteral","MonthNav","_templateObject2","MonthTitle","_templateObject3","baseTheme","ArrowButton","_templateObject4","Day","_templateObject5","props","$isOutlineVisible","concat","MonthControl","_templateObject6","Month","_templateObject7","DayPercent","_templateObject8","DaysContainer","_templateObject9","DayCell","_templateObject10","CalendarModalStyles","$deltaNum","$delta","_ref","calendarRef","refData","_ref$waterData","waterData","dayOfMonth","waterRate","percent","numberRecords","position","delta","current","getBoundingClientRect","left","_jsx","children","Object","values","length","_jsxs","_Fragment","day","waterPercentage","_useState","useState","_useState2","_slicedToArray","activeModal","setActiveModal","ref","useRef","handleClick","e","contains","target","useEffect","document","addEventListener","removeEventListener","CalendarModal","onClick","prevModal","Math","min","Calendar","Date","currentDate","setCurrentDate","dispatch","useDispatch","waterForMonth","useSelector","month","getMonth","getFullYear","fetchMonthThunk","className","prevMonthDate","width","height","href","Icons","Intl","DateTimeFormat","format","nextMonthDate","disabled","today","isCurrentMonth","daysInMonth","getDate","Array","from","_","index","find","item","Number","split","DayComponent","renderDays","ModalContainer","Modal","ModalHead","CloseBtn","ModalHeader","SmaleHeader","ModalEdit","InfoEditWrap","TextEditVolume","TextEditTime","ModalDelete","_templateObject11","SmaleDeleteHeader","_templateObject12","DivDeleteBtn","_templateObject13","InputText","AmountContainer","PlusMinusBtn","AmountSpan","AmountDiv","FormContainer","Form","InputTimeLable","InputVolumeLable","TimeVolumeInput","Field","AmountLable","SaveBtn","SaveVolumeDiv","selectModalType","modals","modal","selectModalWater","waterInModal","selectModalIdWater","_id","selectTodayWater","water","items","WaterEditorForm","_useSelector","date","startAmount","amountWater","isAdd","waterNotes","modalConstants","nRecords","volume","setVolume","_useState3","_useState4","tempVolume","setTempVolume","sprite","Formik","initialValues","time","currentdate","toLocaleTimeString","hour","minute","timeFromDate","onSubmit","actions","inputTime","setHours","setDate","toISOString","addWater","editWater","handleSubmit","resetForm","closeModal","autoComplete","name","type","step","value","onFocus","onBlur","val","parseInt","onChange","useModalClose","modRef","close","isButton","key","window","AddWater","modalRef","TodayStyledDiv","TodayStyle","ListAddDiv","UlStyle","ListItem","InfoWrap","WrapBtn","TextVolume","TextTime","EditBtn","DeleteBtn","AddBtnStyle","DeleteWaterModal","modaldeleteRef","deleteWater","modalRoot","getElementById","WaterModal","open","createPortal","EditWater","TodayWaterList","isOpen","fetchTodayWater","map","openEditWater","id","openDeleteWater","openAddWater","TrackerContainer"],"sourceRoot":""}