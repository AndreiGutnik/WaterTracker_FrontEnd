{"version":3,"file":"static/js/784.337d4e46.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/SignUpPage/SignUpPage.styled.js","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { baseTheme } from 'components/theme';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport bottleDesk1x from '../../images/home/bottle-desk-1x.png';\nimport bottleDesk2x from '../../images/home/bottle-desk-2x.png';\nimport bottleMob1x from '../../images/home/bottle-mob-1x.png';\nimport bottleMob2x from '../../images/home/bottle-mob-2x.png';\nimport bottleTab1x from '../../images/home/bottle-tab-1x.png';\nimport bottleTab2x from '../../images/home/bottle-tab-2x.png';\n\nexport const BottleImg = styled.div`\n  background-image: url(${bottleMob1x});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 280px;\n  height: 210px;\n  background-position: center;\n  margin-top: -26px;\n\n  @media screen and (max-width: 767px) and (-webkit-min-device-pixel-ratio: 2),\n    (max-width: 767px) and (min-resolution: 192dpi) {\n    background-image: url(${bottleMob2x});\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    margin-top: 0;\n    width: 736px;\n    height: 548px;\n    background-position: 80px;\n    background-image: url(${bottleTab1x});\n    z-index: -1;\n  }\n\n  @media screen and (min-width: 768px) and (-webkit-min-device-pixel-ratio: 2),\n    (min-width: 768px) and (min-resolution: 192dpi) {\n    background-image: url(${bottleTab2x});\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 0;\n    background-position: -65px center;\n    width: 916px;\n    min-height: 680px;\n    background-image: url(${bottleDesk1x});\n  }\n\n  @media screen and (min-width: 1440px) and (-webkit-min-device-pixel-ratio: 2),\n    (min-width: 1440px) and (min-resolution: 192dpi) {\n    background-image: url(${bottleDesk2x});\n  }\n`;\n\nexport const SignUpContainer = styled.div`\n  @media screen and (min-width: 768px) {\n    position: relative;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: row-reverse;\n  }\n`;\n\nexport const FormHead = styled.h2`\n  color: ${baseTheme.colors.black};\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 5px;\n  width: 280px;\n\n  & h2 {\n    text-align: left;\n  }\n\n  @media screen and (min-width: 768px) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    margin-right: auto;\n    width: 336px;\n    z-index: 100;\n  }\n\n  @media screen and (min-width: 1440px) {\n    position: static;\n    width: 384px;\n    margin-top: 113px;\n    margin-right: 198px;\n  }\n`;\n\nexport const ErMsg = styled(ErrorMessage)`\n  font-size: 12px;\n  color: ${baseTheme.colors.red};\n`;\n\nexport const StyledField = styled(Field)`\n  margin-top: 8px;\n  display: flex;\n  padding: 12px 10px;\n  width: 100%;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  outline: none;\n  border-radius: 6px;\n  border: 1px solid\n    ${({ error }) =>\n      error === 'true' ? baseTheme.colors.red : baseTheme.colors.violet_light};\n  background: ${baseTheme.colors.white};\n  &::placeholder {\n    color: ${baseTheme.colors.violet_light};\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.23;\n  }\n`;\n\nexport const FormBtnStyled = styled.button`\n  margin-top: 16px;\n  width: 100%;\n  display: flex;\n  padding: 10px 30px;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border-radius: 10px;\n  background: ${baseTheme.colors.blue};\n  box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n  outline: none;\n  border: none;\n  color: ${baseTheme.colors.white};\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.25;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n  }\n  &:active {\n    box-shadow: none;\n  }\n  &:disabled {\n    background-color: ${baseTheme.colors.violet};\n    cursor: not-allowed;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\nexport const Styledlabel = styled.label`\n  margin-top: 16px;\n  color: ${baseTheme.colors.black};\n  position: relative;\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 1.33;\n`;\n\nexport const SightUp = styled.p`\n  margin-top: 16px;\n  color: ${baseTheme.colors.blue};\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 0.8;\n  cursor: pointer;\n  transition: color 250ms ${baseTheme.cubicBezier};\n\n  &:hover {\n    color: ${baseTheme.colors.orange};\n  }\n`;\n\nexport const StyledBtn = styled.div`\n  position: absolute;\n  border: none;\n  top: calc(50% + 34px);\n  right: 4%;\n  cursor: pointer;\n  & svg {\n    width: 16px;\n    height: 16px;\n    border-radius: 30px;\n    border: transparent;\n    background: #fff;\n  }\n\n  & use {\n    fill: ${baseTheme.colors.blue};\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from 'redux/auth/operations';\nimport {\n  SignUpContainer,\n  SightUp,\n  ErMsg,\n  FormBtnStyled,\n  BottleImg,\n  StyledBtn,\n  StyledField,\n  StyledForm,\n  Styledlabel,\n} from './RegistrationForm.styled.js';\nimport sprite from '../../images/sprite.svg';\nconst initialValues = {\n  email: '',\n  password: '',\n  repeatPassword: '',\n};\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Required'),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n    .required('Required'),\n});\n\nconst RegistrationForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showRepeatPassword, setShowRepeatPassword] = useState(false);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = async ({ email, password }, { resetForm }) => {\n    dispatch(\n      register({\n        email,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <SignUpContainer>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, touched, errors }) => (\n          <StyledForm>\n            <h2>Sign Up</h2>\n            <Styledlabel htmlFor=\"email\">Enter your email</Styledlabel>\n            <StyledField\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"E-mail\"\n              autoComplete=\"email\"\n              error={touched.email && errors.email ? 'true' : 'false'}\n            />\n            <ErMsg name=\"email\" component=\"div\" />\n\n            <Styledlabel htmlFor=\"password\">\n              Enter your password\n              <StyledBtn onClick={() => setShowPassword(!showPassword)}>\n                <svg>\n                  <use\n                    href={sprite + (showPassword ? '#eye-show' : '#eye-hide')}\n                  ></use>\n                </svg>\n              </StyledBtn>\n            </Styledlabel>\n            <StyledField\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              error={touched.password && errors.password ? 'true' : 'false'}\n              autoComplete=\"new-password\"\n            />\n\n            <ErMsg name=\"password\" component=\"div\" />\n\n            <Styledlabel htmlFor=\"repeatPassword\">\n              Repeat Password\n              <StyledBtn\n                onClick={() => setShowRepeatPassword(!showRepeatPassword)}\n              >\n                <svg>\n                  <use\n                    href={\n                      sprite + (showRepeatPassword ? '#eye-show' : '#eye-hide')\n                    }\n                  ></use>\n                </svg>\n              </StyledBtn>\n            </Styledlabel>\n            <StyledField\n              type={showRepeatPassword ? 'text' : 'password'}\n              name=\"repeatPassword\"\n              id=\"repeatPassword\"\n              placeholder=\"Repeat your password\"\n              error={\n                touched.repeatPassword && errors.repeatPassword\n                  ? 'true'\n                  : 'false'\n              }\n              autoComplete=\"new-password\"\n            />\n            <ErMsg name=\"repeatPassword\" component=\"div\" />\n\n            <FormBtnStyled type=\"submit\" disabled={isSubmitting}>\n              Sign Up\n            </FormBtnStyled>\n            <SightUp onClick={() => navigate('/signin')}>Sign in</SightUp>\n          </StyledForm>\n        )}\n      </Formik>\n      <BottleImg />\n    </SignUpContainer>\n  );\n};\n\nexport default RegistrationForm;\n","import styled from 'styled-components';\n\nimport backgroundDesktop from '../../images/welcome/backgroundDesktop.svg';\nimport backgroundTablet from '../../images/welcome/backgroundTablet.svg';\nimport backgroundMobile from '../../images/welcome/backgroundMobile.svg';\n\nexport const SignUpSection = styled.section`\n  background-position: top center;\n  background-image: url(${backgroundMobile});\n  background-repeat: no-repeat;\n  background-position: top 25px right 0;\n  width: 100%;\n  width: 320px;\n  margin: 0 auto;\n  padding: 0 20px;\n  outline: 1px solid red;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 0 32px;\n    background-image: url(${backgroundTablet});\n    background-position: center;\n    z-index: -2;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding: 0 18px;\n    background-image: url(${backgroundDesktop});\n  }\n`;\n","import React from 'react';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport { SignUpSection } from './SignUpPage.styled';\n\nconst SignUpPage = () => {\n  return (\n    <SignUpSection>\n      <RegistrationForm />\n    </SignUpSection>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["BottleImg","styled","_templateObject","_taggedTemplateLiteral","bottleMob1x","bottleMob2x","bottleTab1x","bottleTab2x","bottleDesk1x","bottleDesk2x","SignUpContainer","_templateObject2","StyledForm","_templateObject3","baseTheme","Form","_templateObject4","ErMsg","ErrorMessage","_templateObject5","StyledField","Field","_templateObject6","_ref","error","FormBtnStyled","_templateObject7","Styledlabel","_templateObject8","SightUp","_templateObject9","StyledBtn","_templateObject10","initialValues","email","password","repeatPassword","validationSchema","Yup","required","min","oneOf","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","showRepeatPassword","setShowRepeatPassword","dispatch","useDispatch","navigate","useNavigate","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref2","resetForm","_context","prev","next","register","stop","_x","_x2","apply","arguments","_jsxs","children","_jsx","Formik","onSubmit","_ref4","isSubmitting","touched","errors","htmlFor","type","name","id","placeholder","autoComplete","component","onClick","href","sprite","disabled","SignUpSection","backgroundMobile","backgroundTablet","backgroundDesktop","RegistrationForm"],"sourceRoot":""}