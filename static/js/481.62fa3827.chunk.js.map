{"version":3,"file":"static/js/481.62fa3827.chunk.js","mappings":"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","sources":["components/SignInForm/SignInForm.styled.js","components/SignInForm/SignInForm.jsx","pages/SignInPage/SignInPage.styled.js","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport bottleDesk1x from '../../images/home/bottle-desk-1x.png';\nimport bottleDesk2x from '../../images/home/bottle-desk-2x.png';\nimport bottleMob1x from '../../images/home/bottle-mob-1x.png';\nimport bottleMob2x from '../../images/home/bottle-mob-2x.png';\nimport bottleTab1x from '../../images/home/bottle-tab-1x.png';\nimport bottleTab2x from '../../images/home/bottle-tab-2x.png';\n\nexport const BottleImg = styled.div`\n  margin-top: 66px;\n  background-image: url(${bottleMob1x});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 280px;\n  height: 210px;\n  background-position: center;\n\n  @media screen and (max-width: 767px) and (-webkit-min-device-pixel-ratio: 2),\n    (max-width: 767px) and (min-resolution: 192dpi) {\n    background-image: url(${bottleMob2x});\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    margin-top: 0;\n    width: 736px;\n    height: 548px;\n    background-position: 80px;\n    background-image: url(${bottleTab1x});\n    z-index: -1;\n  }\n\n  @media screen and (min-width: 768px) and (-webkit-min-device-pixel-ratio: 2),\n    (min-width: 768px) and (min-resolution: 192dpi) {\n    background-image: url(${bottleTab2x});\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 0;\n    position: static;\n    background-position: -65px center;\n    width: 916px;\n    min-height: 680px;\n    background-image: url(${bottleDesk1x});\n  }\n\n  @media screen and (min-width: 1440px) and (-webkit-min-device-pixel-ratio: 2),\n    (min-width: 1440px) and (min-resolution: 192dpi) {\n    background-image: url(${bottleDesk2x});\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { logIn } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  SignUpContainer,\n  SightUp,\n  ErMsg,\n  FormBtnStyled,\n  StyledBtn,\n  StyledField,\n  StyledForm,\n  Styledlabel,\n} from '../RegistrationForm/RegistrationForm.styled.js';\nimport { BottleImg } from '../SignInForm/SignInForm.styled.js';\nimport sprite from '../../images/sprite.svg';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().required('Required'),\n});\n\nconst SignInForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = async ({ email, password }, { resetForm }) => {\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <SignUpContainer>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, touched, errors }) => (\n          <StyledForm>\n            <h2>Sign in</h2>\n\n            <Styledlabel htmlFor=\"email\">Enter your email</Styledlabel>\n            <StyledField\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              placeholder=\"E-mail\"\n              error={touched.email && errors.email ? 'true' : 'false'}\n              autoComplete=\"email\"\n            />\n            <ErMsg name=\"email\" component=\"div\" />\n\n            <Styledlabel htmlFor=\"password\">\n              Enter your password\n              <StyledBtn onClick={() => setShowPassword(!showPassword)}>\n                <svg>\n                  <use\n                    href={sprite + (showPassword ? '#eye-show' : '#eye-hide')}\n                  ></use>\n                </svg>\n              </StyledBtn>\n            </Styledlabel>\n            <StyledField\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              error={touched.password && errors.password ? 'true' : 'false'}\n              autoComplete=\"current-password\"\n            />\n            <ErMsg name=\"password\" component=\"div\" />\n\n            <FormBtnStyled type=\"submit\" disabled={isSubmitting}>\n              Sign in\n            </FormBtnStyled>\n            <SightUp onClick={() => navigate('/signup')}>Sign up</SightUp>\n          </StyledForm>\n        )}\n      </Formik>\n      <BottleImg />\n    </SignUpContainer>\n  );\n};\n\nexport default SignInForm;\n","import styled from 'styled-components';\n\nimport backgroundDesktop from '../../images/welcome/backgroundDesktop.svg';\nimport backgroundTablet from '../../images/welcome/backgroundTablet.svg';\nimport backgroundMobile from '../../images/welcome/backgroundMobile.svg';\n\nexport const SignInSection = styled.section`\n  background-position: top center;\n  background-image: url(${backgroundMobile});\n  background-repeat: no-repeat;\n  background-position: top 25px right 0;\n  width: 100%;\n  width: 320px;\n  margin: 0 auto;\n  padding: 0 20px;\n  outline: 1px solid red;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding: 0 32px;\n    background-image: url(${backgroundTablet});\n    background-position: center;\n    z-index: -2;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding: 0 18px;\n    background-image: url(${backgroundDesktop});\n  }\n`;\n","import React from 'react';\nimport SignInForm from 'components/SignInForm/SignInForm';\nimport { SignInSection } from './SignInPage.styled';\n\nconst SignInPage = () => {\n  return (\n    <SignInSection>\n      <SignInForm />\n    </SignInSection>\n  );\n};\n\nexport default SignInPage;\n"],"names":["BottleImg","styled","_templateObject","_taggedTemplateLiteral","bottleMob1x","bottleMob2x","bottleTab1x","bottleTab2x","bottleDesk1x","bottleDesk2x","initialValues","email","password","validationSchema","Yup","required","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref","_ref2","resetForm","_context","prev","next","logIn","stop","_x","_x2","apply","arguments","_jsxs","SignUpContainer","children","_jsx","Formik","onSubmit","_ref4","isSubmitting","touched","errors","StyledForm","Styledlabel","htmlFor","StyledField","type","name","id","placeholder","error","autoComplete","ErMsg","component","StyledBtn","onClick","href","sprite","FormBtnStyled","disabled","SightUp","SignInSection","backgroundMobile","backgroundTablet","backgroundDesktop","SignInForm"],"sourceRoot":""}